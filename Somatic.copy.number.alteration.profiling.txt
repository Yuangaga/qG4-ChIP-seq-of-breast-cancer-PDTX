Somatic copy number alteration profiling 
#########################################
Copy number segmentation was performed using the R package QDNAseq, employing 5 million input reads of the qG4-ChIP-seq related input libraries (genomic background for G4-ChIP) and 100 kb resolution (see R script). 
Copy number alterations were classified according to assigned segmentation values (log2 fold ratio), assigning regions as highly amplified (AMP, '> 0.75'), amplified (GAIN, '<=0.75 & > 0.25'), stable (NEUT, '<=0.25 & >= -0.3'), 
heterozygous deletions (HETD, '< -0.3 & > -1.4') and homozygous deletions (HOMD, '<= -1.4').


sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.163 -b 139M_181_input.all.hg19.merged.nodup.25M.bam > 139M_181_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.133 -b 139M_284_input.all.hg19.merged.nodup.25M.bam > 139M_284_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.19335568 -b 143_284_input.all.hg19.merged.nodup.bam > 143_284_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.187304304 -b 143_317_input.hg19.merged.nodup.bam > 143_317_input.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.09934993 -b 179_181_input.all.hg19.merged.nodup.25M.bam > 179_181_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.061604286 -b 179_284_input.all.hg19.merged.nodup.25M.bam > 179_284_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.035192752 -b 201_181_input.all.hg19.merged.nodup.25M.bam > 201_181_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.071069136 -b 201_284_input.all.hg19.merged.nodup.25M.bam > 201_284_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.282995956 -b 316_284_input.all.hg19.merged.nodup.bam > 316_284_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.11886666 -b 331_284_input.all.hg19.merged.nodup.25M.bam > 331_284_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.100817593 -b 521_284_input.all.hg19.merged.nodup.25M.bam > 521_284_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.206256494 -b 5_317_input.hg19.merged.nodup.bam > 5_317_input.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.218742314 -b 863_317_input.hg19.merged.nodup.bam > 863_317_input.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.203658273 -b 9_317_input.hg19.merged.nodup.bam > 9_317_input.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.080981159 -b 98_181_input.all.hg19.merged.nodup.25M.bam > 98_181_input.all.hg19.merged.nodup.5M.bam"
sbatch --mem 16G -o $f.out -e $f.err -J downsample --wrap "samtools view -@ 8 -s 0.220937856 -b 98_284_input.all.hg19.merged.nodup.bam > 98_284_input.all.hg19.merged.nodup.5M.bam"


#Rscript
########  
  library(QDNAseq)
  
  base_dir <- '/Users/hansel01/mnt/sblab_server/data_seq/PDTX/bam_hg19/analysis_11.models_08072018/bam_hg19_input5M/'
  setwd(base_dir)
  
  w <- 100
  bins <- getBinAnnotations(binSize=w)
  
  files <- c('139M_181_input.all.hg19.merged.nodup.5M.bam','139M_284_input.all.hg19.merged.nodup.5M.bam','143_284_input.all.hg19.merged.nodup.5M.bam','143_317_input.all.hg19.merged.nodup.5M.bam','179_181_input.all.hg19.merged.nodup.5M.bam','179_284_input.all.hg19.merged.nodup.5M.bam','201_181_input.all.hg19.merged.nodup.5M.bam','201_284_input.all.hg19.merged.nodup.5M.bam','316_284_input.all.hg19.merged.nodup.5M.bam','331_284_input.all.hg19.merged.nodup.5M.bam','521_284_input.all.hg19.merged.nodup.5M.bam','5_317_input.all.hg19.merged.nodup.5M.bam','863_317_input.all.hg19.merged.nodup.5M.bam','9_317_input.all.hg19.merged.nodup.5M.bam','98_181_input.all.hg19.merged.nodup.5M.bam','98_284_input.all.hg19.merged.nodup.5M.bam')
  
  for (i in 1:length(files))
  {
    print(files[i])
    aname <- gsub('.hg19.*','',files[i])
    readCounts <- binReadCounts(bins, bamfiles=files[i])
    pdf(paste(aname,w,'read_counts.pdf',sep='_'),8,8)
    plot(readCounts, logTransform=FALSE, ylim=c(-50, 200))
    dev.off()
    
    readCountsFiltered <- readCounts
    readCountsFiltered <- applyFilters(readCounts, residual=TRUE, blacklist=TRUE, chromosomes="Y")
    #pdf(paste(aname,w,'isobarPlot.pdf',sep='_'),8,8)
    #isobarPlot(readCountsFiltered)
    #dev.off()
    
    readCountsFiltered <- estimateCorrection(readCountsFiltered)
    pdf(paste(aname,w,'noisePlot.pdf',sep='_'),8,8)
    noisePlot(readCountsFiltered)
    dev.off()
    
    copyNumbers <- correctBins(readCountsFiltered)
    copyNumbersNormalized <- normalizeBins(copyNumbers)
    copyNumbersSmooth <- smoothOutlierBins(copyNumbersNormalized)
    pdf(paste(aname,w,'copyNumberSmooth.pdf',sep='_'),8,8)
    plot(copyNumbersSmooth)
    dev.off()
    
    copyNumbersSegmented <- segmentBins(copyNumbersSmooth, transformFun="none")
    copyNumbersSegmented <- normalizeSegmentedBins(copyNumbersSegmented)
    pdf(paste(aname,w,'copyNumbersSegmented.pdf',sep='_'),8,8)
    plot(copyNumbersSegmented)
    dev.off()
    
    copyNumbersCalled <- callBins(copyNumbersSegmented)
    pdf(paste(aname,w,'copyNumbersCalled.pdf',sep='_'),8,8)
    plot(copyNumbersCalled)
    dev.off()
    
    exportBins(copyNumbersCalled, file=paste(aname,w,'copyNumbersCalled.bed',sep='_'),format='bed')
    
  }
  
#Classification of AMP,GAIN,NEUT,HETD,HOMD
##########################################

#GAIN
#####
for f in 98*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 98*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 98_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 139*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 139*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 139M_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 143*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 143*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 143_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 179*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 179*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 179_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 201*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 201*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 201_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 316*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 316*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 316_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 331*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 331*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 331_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 521*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 521*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 521M_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 5_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 5_*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 5_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 9_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 9_*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 9_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed
for f in 863_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > 0.25) && ($5 <= 0.75)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.GAIN.100kb.bed && cat 863*GAIN.100kb.bed | sort -k1,1 -k2,2n > all.CNA_GAIN.sort.bed; done && mergeBed -i all.CNA_GAIN.sort.bed > 863_PDTX.CNA_GAIN.100kb.merged.bed && rm all.CNA_GAIN.sort.bed

#HETD
#####
for f in 98*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 98*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 98_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 139*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 139*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 139M_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 143*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 143*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 143_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 179*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 179*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 179_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 201*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 201*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 201_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 316*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 316*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 316_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 331*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 331*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 331_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 521*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 521*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 521M_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 5_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 5_*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 5_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 9_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 9_*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 9_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed
for f in 863_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 > -1.4) && ($5 < -0.3)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HETD.100kb.bed && cat 863*HETD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HETD.sort.bed; done && mergeBed -i all.CNA_HETD.sort.bed > 863_PDTX.CNA_HETD.100kb.merged.bed && rm all.CNA_HETD.sort.bed

#NEUT
#####
for f in 98*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 98*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 98_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 139*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 139*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 139M_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 143*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 143*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 143_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 179*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 179*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 179_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 201*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 201*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 201_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 316*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 316*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 316_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 331*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 331*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 331_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 521*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 521*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 521M_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 5_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 5_*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 5_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 9_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 9_*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 9_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed
for f in 863_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if(($5 >= -0.3) && ($5 <= 0.25)) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.NEUT.100kb.bed && cat 863*NEUT.100kb.bed | sort -k1,1 -k2,2n > all.CNA_NEUT.sort.bed; done && mergeBed -i all.CNA_NEUT.sort.bed > 863_PDTX.CNA_NEUT.100kb.merged.bed && rm all.CNA_NEUT.sort.bed

#HOMD
#####
for f in 98*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 98*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 98_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 139*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 139*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 139M_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 143*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 143*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 143_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 179*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 179*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 179_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 201*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 201*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 201_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 316*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 316*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 316_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 331*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 331*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 331_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 521*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 521*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 521M_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 5_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 5_*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 5_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 9_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 9_*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 9_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed
for f in 863_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 <= -1.4) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.HOMD.100kb.bed && cat 863*HOMD.100kb.bed | sort -k1,1 -k2,2n > all.CNA_HOMD.sort.bed; done && mergeBed -i all.CNA_HOMD.sort.bed > 863_PDTX.CNA_HOMD.100kb.merged.bed && rm all.CNA_HOMD.sort.bed

#AMP
#####
for f in 98*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 98*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 98_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 139*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 139*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 139M_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 143*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 143*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 143_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 179*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 179*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 179_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 201*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 201*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 201_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 316*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 316*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 316_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 331*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 331*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 331_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 521*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 521*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 521M_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 5_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 5_*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 5_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 9_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 9_*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 9_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
for f in 863_*100_*.bed.gz; do gzip -dc $f | awk -F "\t" '{ if($5 > 0.75) { print $1,$2,$3 } }' | awk -F'\t' -vOFS='\t' '{ $(NF+1)="chr"$1 ; print }' | sed 's/ /\t/g' | awk -F'\t' -vOFS='\t' '{ print $4,$5,$6 }' | awk -F'\t' -vOFS='\t' '((NR>1) && ($3 >= 0))' | sort -k1,1 -k2,2n > ${f%%.bed.gz}.AMP.100kb.bed && cat 863*AMP.100kb.bed | sort -k1,1 -k2,2n > all.CNA_AMP.sort.bed; done && mergeBed -i all.CNA_AMP.sort.bed > 863_PDTX.CNA_AMP.100kb.merged.bed && rm all.CNA_AMP.sort.bed
